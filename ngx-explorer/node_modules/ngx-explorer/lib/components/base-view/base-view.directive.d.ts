import { OnDestroy } from '@angular/core';
import { Subscription } from 'rxjs';
import { INode, NgeExplorerConfig } from '../../shared/types';
import { ExplorerService } from '../../services/explorer.service';
import * as i0 from "@angular/core";
export declare class BaseView implements OnDestroy {
    protected selection: Set<number>;
    protected items: INode[];
    protected dragging: boolean;
    protected subs: Subscription;
    protected shiftSelectionStartId: number | undefined;
    protected explorerService: ExplorerService;
    protected config: NgeExplorerConfig;
    constructor();
    select(event: MouseEvent, item: INode): void;
    open(event: MouseEvent, item: INode): void;
    isSelected(item: INode): boolean;
    emptySpaceClick(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BaseView, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BaseView, never, never, {}, {}, never, never, false, never>;
}
