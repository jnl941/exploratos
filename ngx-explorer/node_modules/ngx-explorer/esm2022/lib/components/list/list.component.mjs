import { Component, ViewEncapsulation } from '@angular/core';
import { BaseView } from '../base-view/base-view.directive';
import { DragDropDirective } from '../../directives/drag-drop.directive';
import { NgClass } from '@angular/common';
import * as i0 from "@angular/core";
export class ListComponent extends BaseView {
    constructor() {
        super();
        this.icons = {
            node: 'nxe-folder',
            leaf: 'nxe-doc',
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: ListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.2", type: ListComponent, isStandalone: true, selector: "nxe-list", usesInheritance: true, ngImport: i0, template: "<div class=\"nxe-list\" nxeDragDrop (dragging)=\"dragging = $event\">\n    <div class=\"nxe-list-drag\" [ngClass]=\"{ dragging: dragging }\"></div>\n    <div class=\"nxe-list-backpad\" (click)=\"emptySpaceClick()\"></div>\n    <div class=\"nxe-list-container\">\n        <div class=\"nxe-list-wrapper\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Size</th>\n                        <th>Last Modified</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    @for (item of items; track $index) {\n                        <tr\n                            (dblclick)=\"open($event, item)\"\n                            (click)=\"select($event, item)\"\n                            [ngClass]=\"{ 'nxe-list-row-selected': isSelected(item) }\"\n                        >\n                            <td>\n                                <span class=\"nxe-list-icon\">\n                                    <i [className]=\"item.isLeaf ? icons.leaf : icons.node\"></i>\n                                </span>\n                                {{ item.name }}\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n", styles: [".nxe-list{width:100%;height:100%;position:absolute;overflow-y:scroll;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nxe-list .nxe-list-drag{position:absolute;inset:2px;z-index:1}.nxe-list .nxe-list-drag.dragging{border:2px #30a2ff dashed;margin:-2px}.nxe-list .nxe-list-backpad{position:absolute;top:0;left:0;width:100%;height:100%}.nxe-list .nxe-list-container{display:flex;flex-wrap:wrap}.nxe-list .nxe-list-container .nxe-list-wrapper{width:100%;height:100%;display:inline-block;flex-grow:0;z-index:1}.nxe-list .nxe-list-container .nxe-list-wrapper table{width:100%;border-collapse:collapse;border-spacing:0}.nxe-list .nxe-list-container .nxe-list-wrapper table thead{border-bottom:1px solid #ccc}.nxe-list .nxe-list-container .nxe-list-wrapper table thead tr th{text-align:left;padding:10px;border-right:1px solid #ccc;border-spacing:0;border-collapse:collapse;font-weight:400}.nxe-list .nxe-list-container .nxe-list-wrapper table thead tr th:last-child{border-right:none}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr{border-bottom:1px solid #d8d8d8}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr:hover,.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr.nxe-list-row-selected{background-color:#d7edff}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr td{padding:8px 10px}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr td .nxe-list-icon{margin-right:5px;color:#555}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr td .nxe-list-icon .nxe-folder{color:#fdb900}\n"], dependencies: [{ kind: "directive", type: DragDropDirective, selector: "[nxeDragDrop]", outputs: ["dragEnter", "dragOver", "dragLeave", "dragDrop", "dragging"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: ListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nxe-list', encapsulation: ViewEncapsulation.None, standalone: true, imports: [DragDropDirective, NgClass], template: "<div class=\"nxe-list\" nxeDragDrop (dragging)=\"dragging = $event\">\n    <div class=\"nxe-list-drag\" [ngClass]=\"{ dragging: dragging }\"></div>\n    <div class=\"nxe-list-backpad\" (click)=\"emptySpaceClick()\"></div>\n    <div class=\"nxe-list-container\">\n        <div class=\"nxe-list-wrapper\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Type</th>\n                        <th>Size</th>\n                        <th>Last Modified</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    @for (item of items; track $index) {\n                        <tr\n                            (dblclick)=\"open($event, item)\"\n                            (click)=\"select($event, item)\"\n                            [ngClass]=\"{ 'nxe-list-row-selected': isSelected(item) }\"\n                        >\n                            <td>\n                                <span class=\"nxe-list-icon\">\n                                    <i [className]=\"item.isLeaf ? icons.leaf : icons.node\"></i>\n                                </span>\n                                {{ item.name }}\n                            </td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n", styles: [".nxe-list{width:100%;height:100%;position:absolute;overflow-y:scroll;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nxe-list .nxe-list-drag{position:absolute;inset:2px;z-index:1}.nxe-list .nxe-list-drag.dragging{border:2px #30a2ff dashed;margin:-2px}.nxe-list .nxe-list-backpad{position:absolute;top:0;left:0;width:100%;height:100%}.nxe-list .nxe-list-container{display:flex;flex-wrap:wrap}.nxe-list .nxe-list-container .nxe-list-wrapper{width:100%;height:100%;display:inline-block;flex-grow:0;z-index:1}.nxe-list .nxe-list-container .nxe-list-wrapper table{width:100%;border-collapse:collapse;border-spacing:0}.nxe-list .nxe-list-container .nxe-list-wrapper table thead{border-bottom:1px solid #ccc}.nxe-list .nxe-list-container .nxe-list-wrapper table thead tr th{text-align:left;padding:10px;border-right:1px solid #ccc;border-spacing:0;border-collapse:collapse;font-weight:400}.nxe-list .nxe-list-container .nxe-list-wrapper table thead tr th:last-child{border-right:none}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr{border-bottom:1px solid #d8d8d8}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr:hover,.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr.nxe-list-row-selected{background-color:#d7edff}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr td{padding:8px 10px}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr td .nxe-list-icon{margin-right:5px;color:#555}.nxe-list .nxe-list-container .nxe-list-wrapper table tbody tr td .nxe-list-icon .nxe-folder{color:#fdb900}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZXhwbG9yZXIvc3JjL2xpYi9jb21wb25lbnRzL2xpc3QvbGlzdC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZXhwbG9yZXIvc3JjL2xpYi9jb21wb25lbnRzL2xpc3QvbGlzdC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUM1RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7O0FBVTFDLE1BQU0sT0FBTyxhQUFjLFNBQVEsUUFBUTtJQU12QztRQUNJLEtBQUssRUFBRSxDQUFDO1FBTkksVUFBSyxHQUFHO1lBQ3BCLElBQUksRUFBRSxZQUFZO1lBQ2xCLElBQUksRUFBRSxTQUFTO1NBQ2xCLENBQUM7SUFJRixDQUFDOzhHQVJRLGFBQWE7a0dBQWIsYUFBYSwyRkNiMUIsdS9DQXFDQSxnbkREMUJjLGlCQUFpQixtSUFBRSxPQUFPOzsyRkFFM0IsYUFBYTtrQkFSekIsU0FBUzsrQkFDSSxVQUFVLGlCQUdMLGlCQUFpQixDQUFDLElBQUksY0FDekIsSUFBSSxXQUNQLENBQUMsaUJBQWlCLEVBQUUsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZVZpZXcgfSBmcm9tICcuLi9iYXNlLXZpZXcvYmFzZS12aWV3LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEcmFnRHJvcERpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvZHJhZy1kcm9wLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZ0NsYXNzIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdueGUtbGlzdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xpc3QuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xpc3QuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0RyYWdEcm9wRGlyZWN0aXZlLCBOZ0NsYXNzXSxcbn0pXG5leHBvcnQgY2xhc3MgTGlzdENvbXBvbmVudCBleHRlbmRzIEJhc2VWaWV3IHtcbiAgICBwdWJsaWMgcmVhZG9ubHkgaWNvbnMgPSB7XG4gICAgICAgIG5vZGU6ICdueGUtZm9sZGVyJyxcbiAgICAgICAgbGVhZjogJ254ZS1kb2MnLFxuICAgIH07XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwibnhlLWxpc3RcIiBueGVEcmFnRHJvcCAoZHJhZ2dpbmcpPVwiZHJhZ2dpbmcgPSAkZXZlbnRcIj5cbiAgICA8ZGl2IGNsYXNzPVwibnhlLWxpc3QtZHJhZ1wiIFtuZ0NsYXNzXT1cInsgZHJhZ2dpbmc6IGRyYWdnaW5nIH1cIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwibnhlLWxpc3QtYmFja3BhZFwiIChjbGljayk9XCJlbXB0eVNwYWNlQ2xpY2soKVwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJueGUtbGlzdC1jb250YWluZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm54ZS1saXN0LXdyYXBwZXJcIj5cbiAgICAgICAgICAgIDx0YWJsZT5cbiAgICAgICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDx0cj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5OYW1lPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5UeXBlPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5TaXplPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5MYXN0IE1vZGlmaWVkPC90aD5cbiAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgQGZvciAoaXRlbSBvZiBpdGVtczsgdHJhY2sgJGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICA8dHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoZGJsY2xpY2spPVwib3BlbigkZXZlbnQsIGl0ZW0pXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwic2VsZWN0KCRldmVudCwgaXRlbSlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtuZ0NsYXNzXT1cInsgJ254ZS1saXN0LXJvdy1zZWxlY3RlZCc6IGlzU2VsZWN0ZWQoaXRlbSkgfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cIm54ZS1saXN0LWljb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIFtjbGFzc05hbWVdPVwiaXRlbS5pc0xlYWYgPyBpY29ucy5sZWFmIDogaWNvbnMubm9kZVwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBpdGVtLm5hbWUgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbjwvZGl2PlxuIl19