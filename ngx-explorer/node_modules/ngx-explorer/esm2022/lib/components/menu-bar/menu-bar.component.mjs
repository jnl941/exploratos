import { Component, ViewChild, ViewEncapsulation, inject } from '@angular/core';
import { map, take } from 'rxjs';
import { ExplorerService } from '../../services/explorer.service';
import { ViewSwitcherComponent } from '../view-switcher/view-switcher.component';
import { CONFIG } from '../../shared/providers';
import { AsyncPipe } from '@angular/common';
import * as i0 from "@angular/core";
export class MenuBarComponent {
    constructor() {
        this.explorerService = inject(ExplorerService);
        this.config = inject(CONFIG);
        this.featDelete = this.config.features?.delete;
        this.featUpload = this.config.features?.upload;
        this.featDownload = this.config.features?.download;
        this.featRename = this.config.features?.rename;
        this.featCreateDir = this.config.features?.createDir;
        this.canDownload$ = this.explorerService.selection$.pipe(map((n) => n.length === 1 && n[0].isLeaf));
        this.canDelete$ = this.explorerService.selection$.pipe(map((n) => n.length > 0));
        this.canRename$ = this.explorerService.selection$.pipe(map((n) => n.length === 1));
    }
    createDir() {
        const name = prompt('Enter new name');
        if (name) {
            this.explorerService.createDir(name);
        }
    }
    refresh() {
        this.explorerService.refresh();
    }
    rename() {
        this.explorerService.selection$
            .pipe(take(1), map((n) => n[0]))
            .subscribe((node) => {
            const oldName = node.name;
            const newName = prompt('Enter new name', oldName);
            if (newName) {
                this.explorerService.rename(newName);
            }
        });
    }
    remove() {
        if (confirm('Are you sure you want to delete the selected files?')) {
            this.explorerService.remove();
        }
    }
    openUploader() {
        this.uploader.nativeElement.click();
    }
    handleFiles(event) {
        const files = event.target.files;
        if (!files || files.length === 0) {
            return;
        }
        this.explorerService.upload(files);
        this.uploader.nativeElement.value = '';
    }
    download() {
        this.explorerService.download();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: MenuBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.2", type: MenuBarComponent, isStandalone: true, selector: "nxe-menu-bar", viewQueries: [{ propertyName: "uploader", first: true, predicate: ["uploader"], descendants: true, static: true }], ngImport: i0, template: "<div class=\"nxe-menu-bar\">\n    <div class=\"nxe-menu-bar-left\">\n        @if (featCreateDir) {\n            <button class=\"nxe-menu-bar-button\" (click)=\"createDir()\"><i class=\"nxe-folder\" aria-hidden=\"true\"></i>New Folder</button>\n        }\n\n        <button class=\"nxe-menu-bar-button\" (click)=\"refresh()\"><i class=\"nxe-arrows-cw\" aria-hidden=\"true\"></i> Refresh</button>\n\n        @if (featUpload) {\n            <button class=\"nxe-menu-bar-button\" (click)=\"openUploader()\"><i class=\"nxe-upload\" aria-hidden=\"true\"></i> Upload</button>\n        }\n\n        @if (featDownload) {\n            <button class=\"nxe-menu-bar-button\" [disabled]=\"!(canDownload$ | async)\" (click)=\"download()\">\n                <i class=\"nxe-download\" aria-hidden=\"true\"></i> Download\n            </button>\n        }\n\n        @if (featRename) {\n            <button class=\"nxe-menu-bar-button\" [disabled]=\"!(canRename$ | async)\" (click)=\"rename()\">\n                <i class=\"nxe-edit\" aria-hidden=\"true\"></i> Rename\n            </button>\n        }\n\n        @if (featDelete) {\n            <button class=\"nxe-menu-bar-button\" [disabled]=\"!(canDelete$ | async)\" (click)=\"remove()\">\n                <i class=\"nxe-trash-empty\" aria-hidden=\"true\"></i> Delete\n            </button>\n        }\n    </div>\n    <div class=\"nxe-menu-bar-right\">\n        <nxe-view-switcher></nxe-view-switcher>\n    </div>\n    <input style=\"display: none\" type=\"file\" multiple (change)=\"handleFiles($event)\" #uploader />\n</div>\n", styles: [".nxe-menu-bar{display:flex}.nxe-menu-bar .nxe-menu-bar-left{flex-grow:1;padding:10px}.nxe-menu-bar .nxe-menu-bar-button{cursor:pointer;padding:5px;border-radius:5px;background:transparent;border:0;font-family:inherit;font-size:inherit;font-weight:inherit;margin-right:20px}.nxe-menu-bar .nxe-menu-bar-button .nxe-folder{color:#fdb900}.nxe-menu-bar .nxe-menu-bar-button .nxe-arrows-cw{color:green}.nxe-menu-bar .nxe-menu-bar-button .nxe-trash-empty{color:#ca0801}.nxe-menu-bar .nxe-menu-bar-button:hover{background-color:#d7edff}\n"], dependencies: [{ kind: "component", type: ViewSwitcherComponent, selector: "nxe-view-switcher" }, { kind: "pipe", type: AsyncPipe, name: "async" }], encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: MenuBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nxe-menu-bar', encapsulation: ViewEncapsulation.None, standalone: true, imports: [ViewSwitcherComponent, AsyncPipe], template: "<div class=\"nxe-menu-bar\">\n    <div class=\"nxe-menu-bar-left\">\n        @if (featCreateDir) {\n            <button class=\"nxe-menu-bar-button\" (click)=\"createDir()\"><i class=\"nxe-folder\" aria-hidden=\"true\"></i>New Folder</button>\n        }\n\n        <button class=\"nxe-menu-bar-button\" (click)=\"refresh()\"><i class=\"nxe-arrows-cw\" aria-hidden=\"true\"></i> Refresh</button>\n\n        @if (featUpload) {\n            <button class=\"nxe-menu-bar-button\" (click)=\"openUploader()\"><i class=\"nxe-upload\" aria-hidden=\"true\"></i> Upload</button>\n        }\n\n        @if (featDownload) {\n            <button class=\"nxe-menu-bar-button\" [disabled]=\"!(canDownload$ | async)\" (click)=\"download()\">\n                <i class=\"nxe-download\" aria-hidden=\"true\"></i> Download\n            </button>\n        }\n\n        @if (featRename) {\n            <button class=\"nxe-menu-bar-button\" [disabled]=\"!(canRename$ | async)\" (click)=\"rename()\">\n                <i class=\"nxe-edit\" aria-hidden=\"true\"></i> Rename\n            </button>\n        }\n\n        @if (featDelete) {\n            <button class=\"nxe-menu-bar-button\" [disabled]=\"!(canDelete$ | async)\" (click)=\"remove()\">\n                <i class=\"nxe-trash-empty\" aria-hidden=\"true\"></i> Delete\n            </button>\n        }\n    </div>\n    <div class=\"nxe-menu-bar-right\">\n        <nxe-view-switcher></nxe-view-switcher>\n    </div>\n    <input style=\"display: none\" type=\"file\" multiple (change)=\"handleFiles($event)\" #uploader />\n</div>\n", styles: [".nxe-menu-bar{display:flex}.nxe-menu-bar .nxe-menu-bar-left{flex-grow:1;padding:10px}.nxe-menu-bar .nxe-menu-bar-button{cursor:pointer;padding:5px;border-radius:5px;background:transparent;border:0;font-family:inherit;font-size:inherit;font-weight:inherit;margin-right:20px}.nxe-menu-bar .nxe-menu-bar-button .nxe-folder{color:#fdb900}.nxe-menu-bar .nxe-menu-bar-button .nxe-arrows-cw{color:green}.nxe-menu-bar .nxe-menu-bar-button .nxe-trash-empty{color:#ca0801}.nxe-menu-bar .nxe-menu-bar-button:hover{background-color:#d7edff}\n"] }]
        }], propDecorators: { uploader: [{
                type: ViewChild,
                args: ['uploader', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,