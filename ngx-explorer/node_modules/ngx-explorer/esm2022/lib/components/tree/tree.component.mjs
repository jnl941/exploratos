import { ChangeDetectionStrategy, Component, ViewEncapsulation, inject } from '@angular/core';
import { ExplorerService } from '../../services/explorer.service';
import { map } from 'rxjs/operators';
import { AsyncPipe, JsonPipe, NgClass, NgTemplateOutlet } from '@angular/common';
import * as i0 from "@angular/core";
export class TreeComponent {
    constructor() {
        this.explorerService = inject(ExplorerService);
        this.treeNodes = [];
        this.tree$ = this.explorerService.root$.pipe(map((r) => r.children));
        this.selectedId$ = this.explorerService.openedDir$.pipe(map((p) => p?.id));
    }
    open(node) {
        this.explorerService.openNode(node.id);
    }
    expand(event, node) {
        event.preventDefault();
        event.stopPropagation();
        this.explorerService.expand(node.id);
    }
    collapse(event, node) {
        event.preventDefault();
        event.stopPropagation();
        this.explorerService.collapse(node.id);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: TreeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.2.2", type: TreeComponent, isStandalone: true, selector: "nxe-tree", ngImport: i0, template: "<div class=\"nxe-tree\">\n    @if (tree$ | async; as tree) {\n        <ng-container *ngTemplateOutlet=\"treeTmp; context: { nodes: tree }\"> </ng-container>\n    }\n</div>\n\n<ng-template #treeTmp let-nodes=\"nodes\">\n    @if (nodes && nodes.length > 0) {\n        <ul class=\"nxe-tree-ul\">\n            @for (node of nodes; track $index) {\n                @if (!node.isLeaf) {\n                    <li>\n                        <div class=\"item\" (click)=\"open(node)\" [ngClass]=\"{ selected: (selectedId$ | async) === node.id }\">\n                            @if (!node.expanded) {\n                                <div class=\"chevron\" (click)=\"expand($event, node)\"><i class=\"nxe-angle-right\" aria-hidden=\"true\"></i></div>\n                            } @else {\n                                <div class=\"chevron\" (click)=\"collapse($event, node)\">\n                                    <i class=\"nxe-angle-down\" aria-hidden=\"true\"></i>\n                                </div>\n                            }\n                            <div class=\"dir-icon\"><i class=\"nxe-folder\" aria-hidden=\"true\"></i></div>\n                            <div class=\"dir-name\" [innerText]=\"node.name\"></div>\n                        </div>\n\n                        <ng-container *ngTemplateOutlet=\"treeTmp; context: { nodes: node.children }\"> </ng-container>\n                    </li>\n                }\n            }\n        </ul>\n    }\n</ng-template>\n", styles: [".nxe-tree{position:relative;height:100%;overflow-y:scroll;-webkit-user-select:none;user-select:none}.nxe-tree>.nxe-tree-ul{margin-left:0!important}.nxe-tree-ul{list-style-position:inside;padding:0;margin:0 0 0 20px;position:relative;height:100%}.nxe-tree-ul li{list-style-type:none;position:relative;padding:0}.nxe-tree-ul li .item{display:flex;cursor:pointer;padding:3px 2px;align-items:center}.nxe-tree-ul li .item .chevron{text-align:center;color:#333;width:21px;top:1px;font-size:1.3rem}.nxe-tree-ul li .item .dir-icon{margin-right:5px}.nxe-tree-ul li .item .dir-icon i{color:#555;font-weight:500}.nxe-tree-ul li .item .dir-icon i.nxe-folder{color:#fdb900}.nxe-tree-ul li .item .dir-name{flex:1}.nxe-tree-ul li .item:hover{background-color:#d7edff}.nxe-tree-ul li .item.selected{background-color:#c5e1ff}\n"], dependencies: [{ kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "pipe", type: AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: TreeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nxe-tree', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, imports: [NgTemplateOutlet, NgClass, AsyncPipe, JsonPipe], template: "<div class=\"nxe-tree\">\n    @if (tree$ | async; as tree) {\n        <ng-container *ngTemplateOutlet=\"treeTmp; context: { nodes: tree }\"> </ng-container>\n    }\n</div>\n\n<ng-template #treeTmp let-nodes=\"nodes\">\n    @if (nodes && nodes.length > 0) {\n        <ul class=\"nxe-tree-ul\">\n            @for (node of nodes; track $index) {\n                @if (!node.isLeaf) {\n                    <li>\n                        <div class=\"item\" (click)=\"open(node)\" [ngClass]=\"{ selected: (selectedId$ | async) === node.id }\">\n                            @if (!node.expanded) {\n                                <div class=\"chevron\" (click)=\"expand($event, node)\"><i class=\"nxe-angle-right\" aria-hidden=\"true\"></i></div>\n                            } @else {\n                                <div class=\"chevron\" (click)=\"collapse($event, node)\">\n                                    <i class=\"nxe-angle-down\" aria-hidden=\"true\"></i>\n                                </div>\n                            }\n                            <div class=\"dir-icon\"><i class=\"nxe-folder\" aria-hidden=\"true\"></i></div>\n                            <div class=\"dir-name\" [innerText]=\"node.name\"></div>\n                        </div>\n\n                        <ng-container *ngTemplateOutlet=\"treeTmp; context: { nodes: node.children }\"> </ng-container>\n                    </li>\n                }\n            }\n        </ul>\n    }\n</ng-template>\n", styles: [".nxe-tree{position:relative;height:100%;overflow-y:scroll;-webkit-user-select:none;user-select:none}.nxe-tree>.nxe-tree-ul{margin-left:0!important}.nxe-tree-ul{list-style-position:inside;padding:0;margin:0 0 0 20px;position:relative;height:100%}.nxe-tree-ul li{list-style-type:none;position:relative;padding:0}.nxe-tree-ul li .item{display:flex;cursor:pointer;padding:3px 2px;align-items:center}.nxe-tree-ul li .item .chevron{text-align:center;color:#333;width:21px;top:1px;font-size:1.3rem}.nxe-tree-ul li .item .dir-icon{margin-right:5px}.nxe-tree-ul li .item .dir-icon i{color:#555;font-weight:500}.nxe-tree-ul li .item .dir-icon i.nxe-folder{color:#fdb900}.nxe-tree-ul li .item .dir-name{flex:1}.nxe-tree-ul li .item:hover{background-color:#d7edff}.nxe-tree-ul li .item.selected{background-color:#c5e1ff}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZXhwbG9yZXIvc3JjL2xpYi9jb21wb25lbnRzL3RyZWUvdHJlZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZXhwbG9yZXIvc3JjL2xpYi9jb21wb25lbnRzL3RyZWUvdHJlZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztBQVdqRixNQUFNLE9BQU8sYUFBYTtJQVQxQjtRQVVZLG9CQUFlLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3hDLGNBQVMsR0FBWSxFQUFFLENBQUM7UUFDeEIsVUFBSyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLGdCQUFXLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FpQm5GO0lBZkcsSUFBSSxDQUFDLElBQVc7UUFDWixJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFZLEVBQUUsSUFBVztRQUM1QixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdkIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBRUQsUUFBUSxDQUFDLEtBQVksRUFBRSxJQUFXO1FBQzlCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDeEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzNDLENBQUM7OEdBcEJRLGFBQWE7a0dBQWIsYUFBYSxvRUNmMUIsNjhDQStCQSxvMkJEbEJjLGdCQUFnQixvSkFBRSxPQUFPLCtFQUFFLFNBQVM7OzJGQUVyQyxhQUFhO2tCQVR6QixTQUFTOytCQUNJLFVBQVUsaUJBR0wsaUJBQWlCLENBQUMsSUFBSSxtQkFDcEIsdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxJQUFJLFdBQ1AsQ0FBQyxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uLCBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4cGxvcmVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2V4cGxvcmVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgSU5vZGUgfSBmcm9tICcuLi8uLi9zaGFyZWQvdHlwZXMnO1xuaW1wb3J0IHsgQXN5bmNQaXBlLCBKc29uUGlwZSwgTmdDbGFzcywgTmdUZW1wbGF0ZU91dGxldCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbnhlLXRyZWUnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi90cmVlLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi90cmVlLmNvbXBvbmVudC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIGltcG9ydHM6IFtOZ1RlbXBsYXRlT3V0bGV0LCBOZ0NsYXNzLCBBc3luY1BpcGUsIEpzb25QaXBlXSxcbn0pXG5leHBvcnQgY2xhc3MgVHJlZUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBleHBsb3JlclNlcnZpY2UgPSBpbmplY3QoRXhwbG9yZXJTZXJ2aWNlKTtcbiAgICBwcm90ZWN0ZWQgdHJlZU5vZGVzOiBJTm9kZVtdID0gW107XG4gICAgcHJvdGVjdGVkIHRyZWUkID0gdGhpcy5leHBsb3JlclNlcnZpY2Uucm9vdCQucGlwZShtYXAoKHIpID0+IHIuY2hpbGRyZW4pKTtcbiAgICBwcm90ZWN0ZWQgc2VsZWN0ZWRJZCQgPSB0aGlzLmV4cGxvcmVyU2VydmljZS5vcGVuZWREaXIkLnBpcGUobWFwKChwKSA9PiBwPy5pZCkpO1xuXG4gICAgb3Blbihub2RlOiBJTm9kZSkge1xuICAgICAgICB0aGlzLmV4cGxvcmVyU2VydmljZS5vcGVuTm9kZShub2RlLmlkKTtcbiAgICB9XG5cbiAgICBleHBhbmQoZXZlbnQ6IEV2ZW50LCBub2RlOiBJTm9kZSkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgdGhpcy5leHBsb3JlclNlcnZpY2UuZXhwYW5kKG5vZGUuaWQpO1xuICAgIH1cblxuICAgIGNvbGxhcHNlKGV2ZW50OiBFdmVudCwgbm9kZTogSU5vZGUpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHRoaXMuZXhwbG9yZXJTZXJ2aWNlLmNvbGxhcHNlKG5vZGUuaWQpO1xuICAgIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJueGUtdHJlZVwiPlxuICAgIEBpZiAodHJlZSQgfCBhc3luYzsgYXMgdHJlZSkge1xuICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwidHJlZVRtcDsgY29udGV4dDogeyBub2RlczogdHJlZSB9XCI+IDwvbmctY29udGFpbmVyPlxuICAgIH1cbjwvZGl2PlxuXG48bmctdGVtcGxhdGUgI3RyZWVUbXAgbGV0LW5vZGVzPVwibm9kZXNcIj5cbiAgICBAaWYgKG5vZGVzICYmIG5vZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgPHVsIGNsYXNzPVwibnhlLXRyZWUtdWxcIj5cbiAgICAgICAgICAgIEBmb3IgKG5vZGUgb2Ygbm9kZXM7IHRyYWNrICRpbmRleCkge1xuICAgICAgICAgICAgICAgIEBpZiAoIW5vZGUuaXNMZWFmKSB7XG4gICAgICAgICAgICAgICAgICAgIDxsaT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJpdGVtXCIgKGNsaWNrKT1cIm9wZW4obm9kZSlcIiBbbmdDbGFzc109XCJ7IHNlbGVjdGVkOiAoc2VsZWN0ZWRJZCQgfCBhc3luYykgPT09IG5vZGUuaWQgfVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBpZiAoIW5vZGUuZXhwYW5kZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZXZyb25cIiAoY2xpY2spPVwiZXhwYW5kKCRldmVudCwgbm9kZSlcIj48aSBjbGFzcz1cIm54ZS1hbmdsZS1yaWdodFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNoZXZyb25cIiAoY2xpY2spPVwiY29sbGFwc2UoJGV2ZW50LCBub2RlKVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJueGUtYW5nbGUtZG93blwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkaXItaWNvblwiPjxpIGNsYXNzPVwibnhlLWZvbGRlclwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT48L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZGlyLW5hbWVcIiBbaW5uZXJUZXh0XT1cIm5vZGUubmFtZVwiPjwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJ0cmVlVG1wOyBjb250ZXh0OiB7IG5vZGVzOiBub2RlLmNoaWxkcmVuIH1cIj4gPC9uZy1jb250YWluZXI+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICA8L3VsPlxuICAgIH1cbjwvbmctdGVtcGxhdGU+XG4iXX0=