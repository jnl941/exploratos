import { AsyncPipe, NgComponentOutlet } from '@angular/common';
import { Component, inject } from '@angular/core';
import { IconsComponent } from '../icons/icons.component';
import { ListComponent } from '../list/list.component';
import { MenuBarComponent } from '../menu-bar/menu-bar.component';
import { TreeComponent } from '../tree/tree.component';
import { VIEWS } from '../../shared/providers';
import { BreadcrumbsComponent } from '../breadcrumbs/breadcrumbs.component';
import { ExplorerService } from '../../services/explorer.service';
import { map } from 'rxjs';
import * as i0 from "@angular/core";
export class ContentComponent {
    constructor() {
        this.explorerService = inject(ExplorerService);
        this.views = inject(VIEWS);
        this.viewComponent$ = this.explorerService.currentView$.pipe(map((view) => this.views.find((v) => v.name === view).component));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: ContentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.2.2", type: ContentComponent, isStandalone: true, selector: "nxe-content", ngImport: i0, template: "<div class=\"nxe-content\">\n    <div class=\"nxe-content-top\">\n        <nxe-menu-bar></nxe-menu-bar>\n    </div>\n    <div class=\"nxe-content-top\">\n        <nxe-breadcrumbs></nxe-breadcrumbs>\n    </div>\n    <div class=\"nxe-content-middle\">\n        <ng-container *ngComponentOutlet=\"viewComponent$ | async\"></ng-container>\n    </div>\n</div>\n", styles: [".nxe-content{display:flex;flex-flow:column;height:100%}.nxe-content .nxe-content-top{border-bottom:1px solid #ccc}.nxe-content .nxe-content-middle{display:block;position:relative;flex:1 1 auto;border-bottom:1px solid #ccc}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "component", type: MenuBarComponent, selector: "nxe-menu-bar" }, { kind: "component", type: BreadcrumbsComponent, selector: "nxe-breadcrumbs" }, { kind: "directive", type: NgComponentOutlet, selector: "[ngComponentOutlet]", inputs: ["ngComponentOutlet", "ngComponentOutletInputs", "ngComponentOutletInjector", "ngComponentOutletContent", "ngComponentOutletNgModule", "ngComponentOutletNgModuleFactory"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.2.2", ngImport: i0, type: ContentComponent, decorators: [{
            type: Component,
            args: [{ selector: 'nxe-content', standalone: true, imports: [AsyncPipe, MenuBarComponent, TreeComponent, BreadcrumbsComponent, IconsComponent, ListComponent, NgComponentOutlet], template: "<div class=\"nxe-content\">\n    <div class=\"nxe-content-top\">\n        <nxe-menu-bar></nxe-menu-bar>\n    </div>\n    <div class=\"nxe-content-top\">\n        <nxe-breadcrumbs></nxe-breadcrumbs>\n    </div>\n    <div class=\"nxe-content-middle\">\n        <ng-container *ngComponentOutlet=\"viewComponent$ | async\"></ng-container>\n    </div>\n</div>\n", styles: [".nxe-content{display:flex;flex-flow:column;height:100%}.nxe-content .nxe-content-top{border-bottom:1px solid #ccc}.nxe-content .nxe-content-middle{display:block;position:relative;flex:1 1 auto;border-bottom:1px solid #ccc}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZXhwbG9yZXIvc3JjL2xpYi9jb21wb25lbnRzL2NvbnRlbnQvY29udGVudC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZXhwbG9yZXIvc3JjL2xpYi9jb21wb25lbnRzL2NvbnRlbnQvY29udGVudC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdkQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQy9DLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzVFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sTUFBTSxDQUFDOztBQVMzQixNQUFNLE9BQU8sZ0JBQWdCO0lBUDdCO1FBUWMsb0JBQWUsR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDMUMsVUFBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN6QixtQkFBYyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7S0FDckk7OEdBSlksZ0JBQWdCO2tHQUFoQixnQkFBZ0IsdUVDbEI3QixzV0FXQSxxUkRHYyxTQUFTLDhDQUFFLGdCQUFnQix5REFBaUIsb0JBQW9CLDREQUFpQyxpQkFBaUI7OzJGQUluSCxnQkFBZ0I7a0JBUDVCLFNBQVM7K0JBQ0ksYUFBYSxjQUNYLElBQUksV0FDUCxDQUFDLFNBQVMsRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLEVBQUUsb0JBQW9CLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jUGlwZSwgTmdDb21wb25lbnRPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBpbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEljb25zQ29tcG9uZW50IH0gZnJvbSAnLi4vaWNvbnMvaWNvbnMuY29tcG9uZW50JztcbmltcG9ydCB7IExpc3RDb21wb25lbnQgfSBmcm9tICcuLi9saXN0L2xpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IE1lbnVCYXJDb21wb25lbnQgfSBmcm9tICcuLi9tZW51LWJhci9tZW51LWJhci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVHJlZUNvbXBvbmVudCB9IGZyb20gJy4uL3RyZWUvdHJlZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVklFV1MgfSBmcm9tICcuLi8uLi9zaGFyZWQvcHJvdmlkZXJzJztcbmltcG9ydCB7IEJyZWFkY3J1bWJzQ29tcG9uZW50IH0gZnJvbSAnLi4vYnJlYWRjcnVtYnMvYnJlYWRjcnVtYnMuY29tcG9uZW50JztcbmltcG9ydCB7IEV4cGxvcmVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2V4cGxvcmVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbnhlLWNvbnRlbnQnLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0FzeW5jUGlwZSwgTWVudUJhckNvbXBvbmVudCwgVHJlZUNvbXBvbmVudCwgQnJlYWRjcnVtYnNDb21wb25lbnQsIEljb25zQ29tcG9uZW50LCBMaXN0Q29tcG9uZW50LCBOZ0NvbXBvbmVudE91dGxldF0sXG4gICAgdGVtcGxhdGVVcmw6ICcuL2NvbnRlbnQuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsOiAnLi9jb250ZW50LmNvbXBvbmVudC5zY3NzJyxcbn0pXG5leHBvcnQgY2xhc3MgQ29udGVudENvbXBvbmVudCB7XG4gICAgcHJvdGVjdGVkIGV4cGxvcmVyU2VydmljZSA9IGluamVjdChFeHBsb3JlclNlcnZpY2UpO1xuICAgIHByb3RlY3RlZCB2aWV3cyA9IGluamVjdChWSUVXUyk7XG4gICAgcHVibGljIHZpZXdDb21wb25lbnQkID0gdGhpcy5leHBsb3JlclNlcnZpY2UuY3VycmVudFZpZXckLnBpcGUobWFwKCh2aWV3KSA9PiB0aGlzLnZpZXdzLmZpbmQoKHYpID0+IHYubmFtZSA9PT0gdmlldykhLmNvbXBvbmVudCkpO1xufVxuIiwiPGRpdiBjbGFzcz1cIm54ZS1jb250ZW50XCI+XG4gICAgPGRpdiBjbGFzcz1cIm54ZS1jb250ZW50LXRvcFwiPlxuICAgICAgICA8bnhlLW1lbnUtYmFyPjwvbnhlLW1lbnUtYmFyPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJueGUtY29udGVudC10b3BcIj5cbiAgICAgICAgPG54ZS1icmVhZGNydW1icz48L254ZS1icmVhZGNydW1icz5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwibnhlLWNvbnRlbnQtbWlkZGxlXCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nQ29tcG9uZW50T3V0bGV0PVwidmlld0NvbXBvbmVudCQgfCBhc3luY1wiPjwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuPC9kaXY+XG4iXX0=